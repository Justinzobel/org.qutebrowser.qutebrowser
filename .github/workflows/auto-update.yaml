# TODO: add jobs.<job_id>.if to avoid running if flathubbot has an open pr?
# TODO: use strategy for modules update?
# TODO: set pull body with commit titles
# TODO: update app manifest and close outdated prs opened by flathubbot? also set pull title accordingly
# TODO: update on base app change, needs:
#         - cache ostree ref sha or timestamp
#         - add empty commit
#         - switch pr decision login to use envvars instead of diff test
# TODO: update on shared-module changes
name: auto-update
on:
  schedule:
    - cron: '0 */8 * * *'
  workflow_dispatch:
jobs:
  update:
    name: Auto update job
    runs-on: ubuntu-latest
    container:
      image: tinywrkb/flatpak-tools:kde-5.15
      options: --privileged
    if: github.repository_owner == 'flathub'
    env:
      pull_title: Update modules
      pull_body: This pull request was automatically generated by a github action.

    steps:
      - uses: actions/checkout@v2
      - name: Checkout code and set up git
        run: |
              git config user.name github-actions
              git config user.email github-actions@github.com

      - name: Update tools
        run: |
              # dnf upgrade --assumeyes
              flatpak update --assumeyes --noninteractive
        continue-on-error: true

#     - name: Fetch cached changes
#       id: download-artifacts
#       uses: dawidd6/action-download-artifact@v2
#       with:
#         workflow: auto-update.yaml
#         name: cached-changes
#       continue-on-error: true

      - name: Fetch cached changes
        id: download-artifacts
        run: |
              workrun=$(curl \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/flathub/org.qutebrowser.qutebrowser/actions/runs | \
                jq --raw-output \
                '.workflow_runs | map(select(.status=="completed" and .conclusion=="success")) | .[0].id')

              artifact_url=$(curl \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/flathub/org.qutebrowser.qutebrowser/actions/runs/${workrun}/artifacts | \
                jq --raw-output \
                '.artifacts | map(select(.name=="cached-changes")) | .[0].archive_download_url')

              curl \
                -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
                -L "$artifact_url" | \
                bsdtar -xf - changes.patch
        continue-on-error: true


      - name: Create an empty cached changes file
        if: steps.download-artifacts.outcome != 'success'
        run: touch changes.patch

      - name: Upload an an empty cached changes file
        if: steps.download-artifacts.outcome != 'success'
        uses: actions/upload-artifact@v2
        with:
          name: cached-changes
          path: changes.patch

      - name: Create a new empty cached changes file
        run: touch changes.patch.new
      - name: Update python-dependencies
        run: |
              _mod=python-dependencies
              tools/pip-updater $_mod

              # was the manifest changed?
              set +e
              git diff --exit-code ${_mod}.json &>/dev/null
              retval=$?
              set -e
              if [ $retval -eq 1 ]; then
                git add ${_mod}.json
                git commit -m "Update $_mod" || exit 1
                git diff HEAD~1 >> changes.patch.new
              else
                echo "$_mod was not updated."
              fi
        continue-on-error: true

      - name: Update maturin
        run: |
              # don't carry over uncommited changes from previous steps
              if ! git diff --exit-code &>/dev/null; then
                git reset --hard
              fi

              _mod=maturin
              cd $_mod

              ../tools/pip-cargo-updater $_mod || exit 1
              unset _ver
              [ -f version ] && _ver=$(cat version)

              # was the manifest changed?
              set +e
              git diff --exit-code ${_mod}.json &>/dev/null
              retval=$?
              set -e
              if [ $retval -eq 1 ]; then
                git add -u .
                git commit -m "Update ${_mod} to $_ver" || exit 1
                git diff HEAD~1 >> ../changes.patch.new
              else
                echo "$_mod was not updated."
              fi
        continue-on-error: true

      - name: Update python-adblock
        run: |
              # don't carry over uncommited changes from previous steps
              if ! git diff --exit-code &>/dev/null; then
                git reset --hard
              fi

              _mod=python-adblock
              cd $_mod

              ../tools/pip-cargo-updater $_mod || exit 1
              unset _ver
              [ -f version ] && _ver=$(cat version)

              # was the manifest changed?
              set +e
              git diff --exit-code ${_mod}.json &>/dev/null
              retval=$?
              set -e
              if [ $retval -eq 1 ]; then
                git add -u .
                git commit -m "Update ${_mod} to $_ver" || exit 1
                git diff HEAD~1 >> ../changes.patch.new
              else
                echo "$_mod was not updated."
              fi
        continue-on-error: true

      - name: Check if there are new changes since last run
        id: diff-changes
        run: |
              set +e
              diff changes.patch changes.patch.new &>/dev/null
              retval=$?
              set -e
              if [ $retval -eq 1 ] ; then
                mv changes.patch.new changes.patch
              else
                echo 'Nothing has changed since the last run.'
                exit 1
              fi
        continue-on-error: true

      - name: Prepare pull request
        if: steps.diff-changes.outcome == 'success'
        run: |
              declare -i total=$(git rev-list --count origin/master HEAD)
              (( total-- ))

              if [ $total -gt 1 ]; then
                echo pull_title="Update $total modules" >> $GITHUB_ENV
              else
                echo pull_title="$(git show --format='%s' -s)" >> $GITHUB_ENV
              fi

      - name: Push changes
        uses: peter-evans/create-pull-request@v3
        id: push-changes
        if: steps.diff-changes.outcome == 'success'
        with:
          author: github-actions <github-actions@github.com>
          branch: update
          delete-branch: true
          branch-suffix: short-commit-hash
          title: ${{ env.pull_title }}
          body: ${{ env.pull_body }}

      - name: Upload updated cached changes
        if: steps.push-changes.outcome != 'failure'
        uses: actions/upload-artifact@v2
        with:
          name: cached-changes
          path: changes.patch
